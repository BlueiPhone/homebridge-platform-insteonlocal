'use strict';
var Insteon = require('../lib/Insteon');

var gw = new Insteon();


var motion = gw.motion('283e9e');
var leak = gw.leak('2d2dd9');
var door = gw.door('284283');

motion.on('command', function (group, cmd1, cmd2) {
  console.log('Command from motion: group:%s, cmd1:%s, cmd2: %s', group, cmd1, cmd2);

  gw.links(this.id)
  .then(function (links) {
    console.log('%j', status);
  })
  .catch(function (err) {
    console.log(err.stack);
  });
});


leak.on('command', getInfo);

door.on('command', getInfo);

function getInfo(group, cmd1, cmd2) {

  console.log('Command from %s: group:%s, cmd1:%s, cmd2: %s', this.id, group, cmd1, cmd2);


  gw.info(this.id)
  .then(function (info) {
    console.log(info);
  })
  .catch(function (err) {
    console.log(err);
  });
}



gw.connect('192.168.1.122', function () {
  console.log('connected');

  // motion.clearTimer(0)
  // .then(function (rsp) {
  //   console.log('set timer', rsp);
  // })
  // .catch(function (err) {
  //   console.log('Error setting timer', err);
  // });

  // motion.duskThreshold(65)
  // .then(function (rsp) {
  //   console.log('set duskThreshold', rsp);
  // })
  // .catch(function (err) {
  //   console.log('Error setting timer', err);
  // });



  // gw.link(null, {controller: true})
  // .then(function(link) {
  //   console.log(link);
  //   if(!link) {
  //     process.exit(1);
  //   }
  //   return motion.status(false);
  // })
  // .then(function (status) {
  //   console.log('%j', status);
  // })
  // .catch(function (err) {
  //   console.log('Error: ' + err);
  //   console.log(err.stack);
  //   process.exit(1);

  // });

  // motion.options()
  // .then(function (resp) {
  //   console.log(resp);
  // });

  // gw.links()
  // .then(function (links) {
  //   console.log(links);
  // });

  setInterval(function() {
    gw.info()
    .then(function(info) {
      if(!info){
        console.log('Communication Failure Error');
        process.exit(1);
      }
      console.log('Keep Alive');
    }).catch(function() {
      console.log('Connection Error');
      process.exit(1);
    });
  }, 1000*60*5);
});
  // gw.link(null, {controller: true})
  // .then(function(link) {
  //   console.log(link);
  //   if(!link) {
  //     process.exit(1);
  //   }
  //   return motion.status(false);
  // })
  // .then(function (status) {
  //   console.log('%j', status);
  // })
  // .catch(function (err) {
  //   console.log('Error: ' + err);
  //   console.log(err.stack);
  //   process.exit(1);

  // });

  //
  // var responders = [{
  //   id: '26ace1',
  //   level: 50, /* 100% */
  //   ramp: 6500 /* 2 sec */
  // }, {
  //   id: '26b1cc',
  //   level: 50, /* 100% */
  //   ramp: 6500 /* 2 sec */
  // }];

  // gw.thermostatState('292638', function (err, temp) {
  //   console.log('thermostatState: %j', temp);
  // });



  // var cmd = {
  //   cmd1: '2E',
  //   cmd2: '00',
  //   extended: true,
  //   exitOnAck: true,
  //   crc: false,
  //   userData: ['01', '0F', 'ff']
  // };
  //
  // var cmd0 = {cmd1: '2E', cmd2: '02', extended: true, crc: true};
  // var cmd = {cmd1: '2E', cmd2: '00', extended: true, crc: true,  userData: ['00', '00', '02']};

  // gw.directCommand('292638', cmd, 60, function (err, status) {


  // gw.unlink('292638', {controller: true, group: 0xFE})
  // .then(function () {
  //   return gw.links();
  // }).then(function(links) {
  //   console.log(links);
  //   process.exit();
  // });

  // thermo.monitor(false).then(function () {
  //   return gw.links();
  // }).then(function(links) {
  //   console.log(links);
  //   process.exit();
  // });

  // gw.info('27ab71')
  // .then(function (details) {
  //   console.log('%j', details);
  // })
  // .then(process.exit);
  // });
    // var cmd0 = {cmd1: '2E', cmd2: '00', extended: true};
// var cmd = {cmd1: '2E', cmd2: '03', extended: true};
  //
  // cmd0.userData = ['01', '08', 'FF'];
  // // cmd.userData = ['00', '00', '00', '00', '00', '00', '00', '00', '00', '00', '00', '00', '92', 'A8'];
  //
  // gw.directCommand('292638', cmd0, function (err, status) {
  //   logData(status);
  //   gw.directCommand('292638', cmd, function (err, status) {
  //     logData(status);
      // gw.thermostatDetails('292638', function (err, details) {
      //   console.log('%j', details);
      //   process.exit();
      //
      // });
  //   });
  // });



function logData(status) {
  var data;
  try {
    data = status.response.extended.userData.join() + ' => ' +
    status.response.extended.userData.map(function (v) {
      return parseInt(v, 16);
    }).join();
  } catch (e) {
    data = '';
  }

  console.log(status.command.raw + ' => ' + data);


}



function toByte(value, length) {
  length = length || 1;
  value = value.toString(16).toUpperCase();
  var pad = new Array((length * 2) + 1).join('0');
  return pad.substring(0, pad.length - value.length) + value;
}
